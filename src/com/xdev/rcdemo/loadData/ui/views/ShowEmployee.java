package com.xdev.rcdemo.loadData.ui.views;

import java.io.ByteArrayInputStream;
import java.io.InputStream;

import com.vaadin.data.Property;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.server.StreamResource;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.xdev.rcdemo.loadData.entities.Employee;
import com.xdev.rcdemo.loadData.entities.Employee_;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevFieldGroup;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevHorizontalLayout;
import com.xdev.ui.XdevImage;
import com.xdev.ui.XdevLabel;
import com.xdev.ui.XdevPopupDateField;
import com.xdev.ui.XdevTextArea;
import com.xdev.ui.XdevTextField;
import com.xdev.ui.XdevVerticalLayout;
import com.xdev.ui.XdevView;
import com.xdev.ui.entitycomponent.table.XdevTable;
import com.xdev.ui.masterdetail.MasterDetail;
import com.xdev.ui.navigation.Navigation;

public class ShowEmployee extends XdevView {

	/**
	 *
	 */
	public ShowEmployee() {
		super();
		this.initUI();
	}

	@Override
	public void enter(final ViewChangeListener.ViewChangeEvent event) {
		super.enter(event);

	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #button}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button_buttonClick(final Button.ClickEvent event) {
		Navigation.to("").navigate();
	}

	/**
	 * Event handler delegate method for the {@link XdevTable} {@link #table}.
	 *
	 * @see Property.ValueChangeListener#valueChange(Property.ValueChangeEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void table_valueChange(final Property.ValueChangeEvent event) {

		/*
		 * If a row of the table is selected:
		 *
		 * Get the Photo file from the current "Employee" and set it to the XdevImage component
		 *
		 */

		if (this.table.getSelectedItem() != null)
		{

			/*
			 * Get the "Employee" entity bean from the table
			 */

			final Employee bean = this.table.getSelectedItem().getBean();


			/*
			 * Prepare the filename and get the Photo content (as byte array)
			 */

			final String filename = bean.getEmployeeid() + "_" + bean.getLastname() + ".bmp";
			final byte[] picture = bean.getPhoto();


			/*
			 * Convert the byte array to a InputStream
			 */

			final ByteArrayInputStream myByteArrayInputStream = new ByteArrayInputStream(picture);



			/*
			 * Build a StreamResource and set it as source of the XdevImage component
			 *
			 * To see this code step by step see the "ShowPDF.java"-file
			 *
			 */

			this.image.setSource(
				new StreamResource(
					new StreamResource.StreamSource() {
						@Override
						public InputStream getStream() {
							return myByteArrayInputStream;
						}
					},
					filename)
				);



			/*
			 *  Set width of the image to "undefined" to avoid distortion
			 */

			this.image.setWidthUndefined();

		}
		else
		{
			this.image.setSource(null);
		}

	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.verticalLayout = new XdevVerticalLayout();
		this.horizontalLayout = new XdevHorizontalLayout();
		this.button = new XdevButton();
		this.label = new XdevLabel();
		this.horizontalLayout2 = new XdevHorizontalLayout();
		this.table = new XdevTable<>();
		this.form = new XdevGridLayout();
		this.lblTitle = new XdevLabel();
		this.txtTitle = new XdevTextField();
		this.image = new XdevImage();
		this.lblLastname = new XdevLabel();
		this.txtLastname = new XdevTextField();
		this.lblFirstname = new XdevLabel();
		this.txtFirstname = new XdevTextField();
		this.lblCity = new XdevLabel();
		this.txtCity = new XdevTextField();
		this.lblBirthdate = new XdevLabel();
		this.dateBirthdate = new XdevPopupDateField();
		this.lblHiredate = new XdevLabel();
		this.dateHiredate = new XdevPopupDateField();
		this.lblNotes = new XdevLabel();
		this.txtNotesArea = new XdevTextArea();
		this.fieldGroup = new XdevFieldGroup<>(Employee.class);

		this.horizontalLayout.setMargin(new MarginInfo(false));
		this.button.setCaption("Back");
		this.label.setValue(
				"The code to get the image byte array and change it to a StreamResource can be found in the table's \"valueChange\" - event ");
		this.horizontalLayout2.setMargin(new MarginInfo(false));
		this.table.setContainerDataSource(Employee.class);
		this.table.setVisibleColumns(Employee_.employeeid.getName(), Employee_.lastname.getName(),
				Employee_.firstname.getName());
		this.form.setEnabled(false);
		this.form.setMargin(new MarginInfo(false, false, true, true));
		this.lblTitle.setValue("Title");
		this.txtTitle.setTabIndex(3);
		this.lblLastname.setValue("Lastname");
		this.txtLastname.setTabIndex(1);
		this.lblFirstname.setValue("Firstname");
		this.txtFirstname.setTabIndex(2);
		this.lblCity.setValue("City");
		this.txtCity.setTabIndex(6);
		this.lblBirthdate.setValue("Birthdate");
		this.dateBirthdate.setTabIndex(4);
		this.lblHiredate.setValue("Hiredate");
		this.dateHiredate.setTabIndex(5);
		this.lblNotes.setValue("Notes");
		this.txtNotesArea.setRows(5);
		this.fieldGroup.bind(this.txtLastname, Employee_.lastname.getName());
		this.fieldGroup.bind(this.txtFirstname, Employee_.firstname.getName());
		this.fieldGroup.bind(this.txtTitle, Employee_.title.getName());
		this.fieldGroup.bind(this.dateBirthdate, Employee_.birthdate.getName());
		this.fieldGroup.bind(this.dateHiredate, Employee_.hiredate.getName());
		this.fieldGroup.bind(this.txtCity, Employee_.city.getName());

		MasterDetail.connect(this.table, this.fieldGroup);

		this.button.setSizeUndefined();
		this.horizontalLayout.addComponent(this.button);
		this.horizontalLayout.setComponentAlignment(this.button, Alignment.MIDDLE_CENTER);
		final CustomComponent horizontalLayout_spacer = new CustomComponent();
		horizontalLayout_spacer.setSizeFull();
		this.horizontalLayout.addComponent(horizontalLayout_spacer);
		this.horizontalLayout.setExpandRatio(horizontalLayout_spacer, 1.0F);
		this.form.setColumns(4);
		this.form.setRows(6);
		this.lblTitle.setSizeUndefined();
		this.form.addComponent(this.lblTitle, 0, 0);
		this.txtTitle.setSizeUndefined();
		this.form.addComponent(this.txtTitle, 1, 0);
		this.image.setSizeFull();
		this.form.addComponent(this.image, 2, 0, 3, 3);
		this.form.setComponentAlignment(this.image, Alignment.TOP_RIGHT);
		this.lblLastname.setSizeUndefined();
		this.form.addComponent(this.lblLastname, 0, 1);
		this.txtLastname.setWidth(100, Unit.PERCENTAGE);
		this.txtLastname.setHeight(-1, Unit.PIXELS);
		this.form.addComponent(this.txtLastname, 1, 1);
		this.lblFirstname.setSizeUndefined();
		this.form.addComponent(this.lblFirstname, 0, 2);
		this.txtFirstname.setWidth(100, Unit.PERCENTAGE);
		this.txtFirstname.setHeight(-1, Unit.PIXELS);
		this.form.addComponent(this.txtFirstname, 1, 2);
		this.lblCity.setSizeUndefined();
		this.form.addComponent(this.lblCity, 0, 3);
		this.txtCity.setWidth(100, Unit.PERCENTAGE);
		this.txtCity.setHeight(-1, Unit.PIXELS);
		this.form.addComponent(this.txtCity, 1, 3);
		this.lblBirthdate.setSizeUndefined();
		this.form.addComponent(this.lblBirthdate, 0, 4);
		this.dateBirthdate.setSizeUndefined();
		this.form.addComponent(this.dateBirthdate, 1, 4);
		this.lblHiredate.setSizeUndefined();
		this.form.addComponent(this.lblHiredate, 2, 4);
		this.dateHiredate.setSizeUndefined();
		this.form.addComponent(this.dateHiredate, 3, 4);
		this.lblNotes.setSizeUndefined();
		this.form.addComponent(this.lblNotes, 0, 5);
		this.txtNotesArea.setWidth(100, Unit.PERCENTAGE);
		this.txtNotesArea.setHeight(-1, Unit.PIXELS);
		this.form.addComponent(this.txtNotesArea, 1, 5, 3, 5);
		this.form.setColumnExpandRatio(1, 100.0F);
		this.form.setColumnExpandRatio(2, 10.0F);
		this.form.setRowExpandRatio(2, 10.0F);
		this.table.setSizeFull();
		this.horizontalLayout2.addComponent(this.table);
		this.horizontalLayout2.setComponentAlignment(this.table, Alignment.MIDDLE_CENTER);
		this.horizontalLayout2.setExpandRatio(this.table, 10.0F);
		this.form.setSizeUndefined();
		this.horizontalLayout2.addComponent(this.form);
		this.horizontalLayout.setWidth(100, Unit.PERCENTAGE);
		this.horizontalLayout.setHeight(-1, Unit.PIXELS);
		this.verticalLayout.addComponent(this.horizontalLayout);
		this.verticalLayout.setComponentAlignment(this.horizontalLayout, Alignment.MIDDLE_CENTER);
		this.label.setWidth(100, Unit.PERCENTAGE);
		this.label.setHeight(-1, Unit.PIXELS);
		this.verticalLayout.addComponent(this.label);
		this.horizontalLayout2.setSizeFull();
		this.verticalLayout.addComponent(this.horizontalLayout2);
		this.verticalLayout.setComponentAlignment(this.horizontalLayout2, Alignment.MIDDLE_CENTER);
		this.verticalLayout.setExpandRatio(this.horizontalLayout2, 10.0F);
		this.verticalLayout.setSizeFull();
		this.setContent(this.verticalLayout);
		this.setSizeFull();

		this.button.addClickListener(event -> this.button_buttonClick(event));
		this.table.addValueChangeListener(new Property.ValueChangeListener() {
			@Override
			public void valueChange(final Property.ValueChangeEvent event) {
				ShowEmployee.this.table_valueChange(event);
			}
		});
	} // </generated-code>

	// <generated-code name="variables">
	private XdevButton button;
	private XdevLabel label, lblTitle, lblLastname, lblFirstname, lblCity, lblBirthdate, lblHiredate, lblNotes;
	private XdevHorizontalLayout horizontalLayout, horizontalLayout2;
	private XdevImage image;
	private XdevFieldGroup<Employee> fieldGroup;
	private XdevPopupDateField dateBirthdate, dateHiredate;
	private XdevTextArea txtNotesArea;
	private XdevGridLayout form;
	private XdevTextField txtTitle, txtLastname, txtFirstname, txtCity;
	private XdevVerticalLayout verticalLayout;
	private XdevTable<Employee> table;
	// </generated-code>

}
