package com.xdev.rcdemo.loadData.ui.views;

import java.io.ByteArrayInputStream;
import java.io.InputStream;

import com.vaadin.data.Property;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.server.StreamResource;
import com.vaadin.server.StreamResource.StreamSource;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.xdev.rcdemo.loadData.entities.BlobStore;
import com.xdev.rcdemo.loadData.entities.BlobStore_;
import com.xdev.ui.XdevBrowserFrame;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevHorizontalLayout;
import com.xdev.ui.XdevLabel;
import com.xdev.ui.XdevVerticalLayout;
import com.xdev.ui.XdevView;
import com.xdev.ui.entitycomponent.table.XdevTable;
import com.xdev.ui.navigation.Navigation;

public class ShowPDF extends XdevView {

	/**
	 *
	 */
	public ShowPDF() {
		super();
		this.initUI();
	}

	@Override
	public void enter(final ViewChangeListener.ViewChangeEvent event) {
		super.enter(event);

	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #button}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void button_buttonClick(final Button.ClickEvent event) {
		Navigation.to("").navigate();
	}

	/**
	 * Event handler delegate method for the {@link XdevTable} {@link #table}.
	 *
	 * @see Property.ValueChangeListener#valueChange(Property.ValueChangeEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void table_valueChange(final Property.ValueChangeEvent event) {

		/*
		 * If a row of the table is selected:
		 *
		 * Get the PDF file from the current "Blobstore" and set it to the browserframe component
		 *
		 */

		if (this.table.getSelectedItem() != null)
		{

			/*
			 * Get the "Blobstore" entity bean from the table
			 */

			final BlobStore bean = this.table.getSelectedItem().getBean();


			/*
			 * Get the filename and the file content (as byte array)
			 * Here, the file is a pdf file
			 */

			final String filename = bean.getFilename();
			final byte[] fileContent = bean.getFilecontent();

			/*
			 * Convert the byte array to a InputStream
			 */

			final ByteArrayInputStream myByteArrayInputStream = new ByteArrayInputStream(fileContent);



			/*
			 * Build a StreamSource from the stream
			 *
			 * A StreamSource just defines what to do if someone wants the content with "getStream".
			 *
			 */

			final StreamSource myStreamSource = new StreamResource.StreamSource() {
				@Override
				public InputStream getStream() {
					return myByteArrayInputStream;
				}
			};


			/*
			 * Wrap the source and the filename in a Resource
			 *
			 * @see StreamResource
			 * There are also other Resource variants available like FileResource or ThemeResource
			 */

			final StreamResource streamResource = new StreamResource(myStreamSource, filename);

			/*
			 * Set this StreamResource as source of the XdevBrowserFrame component.
			 */

			this.browserFrame.setSource(streamResource);


		}
		else
		{
			this.browserFrame.setSource(null);
		}
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.verticalLayout = new XdevVerticalLayout();
		this.horizontalLayout = new XdevHorizontalLayout();
		this.button = new XdevButton();
		this.label2 = new XdevLabel();
		this.label = new XdevLabel();
		this.horizontalLayout2 = new XdevHorizontalLayout();
		this.table = new XdevTable<>();
		this.browserFrame = new XdevBrowserFrame();

		this.horizontalLayout.setMargin(new MarginInfo(false));
		this.button.setCaption("Back");
		this.label2.setValue(
				"The code to get the file byte array and change it to a StreamResource can be found in the table's \"valueChange\" - event ");
		this.label.setValue("To display a pdf see also demoproject 'rapidclipse-demo-pdfupload'");
		this.horizontalLayout2.setMargin(new MarginInfo(false, true, false, false));
		this.table.setContainerDataSource(BlobStore.class);
		this.table.setVisibleColumns(BlobStore_.filename.getName(), BlobStore_.description.getName(),
				BlobStore_.mimetype.getName());

		this.button.setSizeUndefined();
		this.horizontalLayout.addComponent(this.button);
		this.horizontalLayout.setComponentAlignment(this.button, Alignment.MIDDLE_CENTER);
		final CustomComponent horizontalLayout_spacer = new CustomComponent();
		horizontalLayout_spacer.setSizeFull();
		this.horizontalLayout.addComponent(horizontalLayout_spacer);
		this.horizontalLayout.setExpandRatio(horizontalLayout_spacer, 1.0F);
		this.table.setSizeFull();
		this.horizontalLayout2.addComponent(this.table);
		this.horizontalLayout2.setComponentAlignment(this.table, Alignment.MIDDLE_CENTER);
		this.horizontalLayout2.setExpandRatio(this.table, 10.0F);
		this.browserFrame.setSizeFull();
		this.horizontalLayout2.addComponent(this.browserFrame);
		this.horizontalLayout2.setComponentAlignment(this.browserFrame, Alignment.MIDDLE_CENTER);
		this.horizontalLayout2.setExpandRatio(this.browserFrame, 20.0F);
		this.horizontalLayout.setWidth(100, Unit.PERCENTAGE);
		this.horizontalLayout.setHeight(-1, Unit.PIXELS);
		this.verticalLayout.addComponent(this.horizontalLayout);
		this.verticalLayout.setComponentAlignment(this.horizontalLayout, Alignment.MIDDLE_CENTER);
		this.label2.setSizeUndefined();
		this.verticalLayout.addComponent(this.label2);
		this.label.setWidth(100, Unit.PERCENTAGE);
		this.label.setHeight(-1, Unit.PIXELS);
		this.verticalLayout.addComponent(this.label);
		this.verticalLayout.setComponentAlignment(this.label, Alignment.MIDDLE_CENTER);
		this.horizontalLayout2.setSizeFull();
		this.verticalLayout.addComponent(this.horizontalLayout2);
		this.verticalLayout.setComponentAlignment(this.horizontalLayout2, Alignment.MIDDLE_CENTER);
		this.verticalLayout.setExpandRatio(this.horizontalLayout2, 10.0F);
		this.verticalLayout.setSizeFull();
		this.setContent(this.verticalLayout);
		this.setSizeFull();

		this.button.addClickListener(event -> this.button_buttonClick(event));
		this.table.addValueChangeListener(new Property.ValueChangeListener() {
			@Override
			public void valueChange(final Property.ValueChangeEvent event) {
				ShowPDF.this.table_valueChange(event);
			}
		});
	} // </generated-code>

	// <generated-code name="variables">
	private XdevButton button;
	private XdevLabel label2, label;
	private XdevHorizontalLayout horizontalLayout, horizontalLayout2;
	private XdevTable<BlobStore> table;
	private XdevBrowserFrame browserFrame;
	private XdevVerticalLayout verticalLayout;
	// </generated-code>

}
